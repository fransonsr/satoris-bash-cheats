#!/bin/bash
# Arguments = -r ref -d

#set -e 

usage() {
cat << EOF
usage: $0 options

Push artifacts contained in a directory to the specified reference.
OPTIONS:
  -r  reference; either 'beta' or 'prod' (default: prod)
  -d  include dependent services in vitals check
EOF
}

REF=prod
QUERY=""
while getopts "hr:d" OPTION
do
  case $OPTION in
    h)
      usage
      exit 1
      ;;
    r)
      REF=$OPTARG
      ;;
	d)
	  QUERY="?includeDependentServices=true"
	  ;;
    ?)
      usage
      exit 1
      ;;
  esac
done

if [[ -z $REF ]]; then
  usage
  exit 1
fi

case "$REF" in
  beta|prod|test) ;;
  *)
    echo Reference must be one of 'stage' or 'prod'.
    usage
    exit 1
    ;;
esac

REFERENCE="https://sg30p0.familysearch.org/service/indexing"
if [[ "$REF" == "beta" ]]; then
	REFERENCE="https://sg31b0.familysearch.org/service/indexing"
elif [[ "$REF" == "test" ]]; then
	REFERENCE="https://sg31b0.familysearch.org/service/indexing"
fi

HEALTH=OK

_assertVitals() {
	URI=$1
	TEMPFILE=`mktemp -p $TMPDIR vitals.XXXXXXXX`
	RCODE=`curl -f -s $URI -o $TEMPFILE -w %{http_code}`
	if [[ "$RCODE" != "200" ]]; then
		echo " Service failed with error: $RCODE uri: $URI"
		HEALTH=FAIL
		return
	fi
	
	VERSION=`grep version $TEMPFILE | cut -c17-`
	echo "$VERSION"
	
	rm $TEMPFILE
}

_healthcheck() {
        SERVER=$1
        echo Checking server: $SERVER
        echo ================
        echo -n idx-api-server: ; curl -f -s $SERVER/api/.well-known/healthcheck/vitals$QUERY > /dev/null; echo " OK"
        echo -n adminClient: ; curl -f -s $SERVER/admin-app/index$QUERY > /dev/null; echo " OK"
        echo -n gedxBuilder: ; curl -f -s $SERVER/template-app/$QUERY > /dev/null; echo " OK"
		echo -n swing-apps: ; curl -f -s $SERVER/apps/version.jsp$QUERY > /dev/null ; echo " OK"
        echo -n idx-discovery: ; _assertVitals $SERVER/discovery/.well-known/healthcheck/vitals$QUERY
        echo -n idx-project: ; _assertVitals $SERVER/project/.well-known/healthcheck/vitals$QUERY
        echo -n idx-template: ; _assertVitals $SERVER/template/.well-known/healthcheck/vitals$QUERY
        echo -n idx-workflow: ; _assertVitals $SERVER/workflow/.well-known/healthcheck/vitals$QUERY
        echo -n idx-user: ; _assertVitals $SERVER/user/.well-known/healthcheck/vitals$QUERY
        echo -n idx-metric: ; _assertVitals $SERVER/metric/.well-known/healthcheck/vitals$QUERY
        echo -n idx-statistic: ; _assertVitals $SERVER/statistic/.well-known/healthcheck/vitals$QUERY
#        echo -n idx-message: ; _assertVitals $SERVER/indexing-service/message/.well-known/healthcheck/vitals$QUERY
        echo -n idx-orchestration: ; _assertVitals $SERVER/orchestration/.well-known/healthcheck/vitals$QUERY
#        echo -n cmp-mailbox: ; _assertVitals $SERVER/fst/mailbox/.well-known/healthcheck/vitals$QUERY
        echo Health $HEALTH: server: $SERVER
        echo
}

_healthcheck $REFERENCE

echo Script: healthcheck: Finished
